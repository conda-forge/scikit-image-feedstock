diff --git a/skimage/data/_fetchers.py b/skimage/data/_fetchers.py
index 821e086a8..cbd86852e 100644
--- a/skimage/data/_fetchers.py
+++ b/skimage/data/_fetchers.py
@@ -194,6 +194,18 @@ def _fetch(data_filename):
     # Case 3:
     # Pooch not found.
     if image_fetcher is None:
+        # Check if pytest is currently running.
+        # Packagers might use pytest to run the tests suite, but may not
+        # want to run it online with pooch as a dependency.
+        # As such, we will avoid failing the test, and silently skipping it.
+        if 'PYTEST_CURRENT_TEST' in os.environ:
+            # https://docs.pytest.org/en/latest/example/simple.html#pytest-current-test-environment-variable
+            import pytest
+            # Pytest skip raises an exception that allows the
+            # tests to be skipped
+            pytest.skip(f'Unable to download {data_filename}',
+                        allow_module_level=True)
+
         raise ModuleNotFoundError(
             "The requested file is part of the scikit-image distribution, "
             "but requires the installation of an optional dependency, pooch. "
@@ -209,6 +221,17 @@ def _fetch(data_filename):
     try:
         resolved_path = image_fetcher.fetch(data_filename)
     except ConnectionError as err:
+        # Check if pytest is currently running.
+        # Packagers might use pytest to run the tests suite, but may not
+        # want to run it online.
+        # As such, we will avoid failing the test, and silently skipping it.
+        if 'PYTEST_CURRENT_TEST' in os.environ:
+            # https://docs.pytest.org/en/latest/example/simple.html#pytest-current-test-environment-variable
+            import pytest
+            # Pytest skip raises an exception that allows the
+            # tests to be skipped
+            pytest.skip(f'Unable to download {data_filename}',
+                        allow_module_level=True)
         # If we decide in the future to suppress the underlying 'requests'
         # error, change this to `raise ... from None`. See PEP 3134.
         raise ConnectionError(
diff --git a/skimage/measure/tests/test_blur_effect.py b/skimage/measure/tests/test_blur_effect.py
index eaef61b87..22bfeefa8 100644
--- a/skimage/measure/tests/test_blur_effect.py
+++ b/skimage/measure/tests/test_blur_effect.py
@@ -5,12 +5,10 @@ from skimage.data import astronaut, cells3d
 from skimage.filters import gaussian
 from skimage.measure import blur_effect
 
-image = astronaut()
-image_3d = cells3d()[:, 1, :, :]  # grab just the nuclei
-
 
 def test_blur_effect():
     """Test that the blur metric increases with more blurring."""
+    image = astronaut()
     B0 = blur_effect(image, channel_axis=-1)
     B1 = blur_effect(gaussian(image, sigma=1, channel_axis=-1),
                         channel_axis=-1)
@@ -24,6 +22,7 @@ def test_blur_effect_h_size():
     """Test that the blur metric decreases with increasing size of the
     re-blurring filter.
     """
+    image = astronaut()
     B0 = blur_effect(image, h_size=3, channel_axis=-1)
     B1 = blur_effect(image, channel_axis=-1)  # default h_size is 11
     B2 = blur_effect(image, h_size=30, channel_axis=-1)
@@ -35,6 +34,7 @@ def test_blur_effect_channel_axis():
     """Test that passing an RGB image is equivalent to passing its grayscale
     version.
     """
+    image = astronaut()
     B0 = blur_effect(image, channel_axis=-1)
     B1 = blur_effect(rgb2gray(image))
     B0_arr = blur_effect(image, channel_axis=-1, reduce_func=None)
@@ -46,6 +46,7 @@ def test_blur_effect_channel_axis():
 
 def test_blur_effect_3d():
     """Test that the blur metric works on a 3D image."""
+    image_3d = cells3d()[:, 1, :, :]  # grab just the nuclei
     B0 = blur_effect(image_3d)
     B1 = blur_effect(gaussian(image_3d, sigma=1))
     B2 = blur_effect(gaussian(image_3d, sigma=4))
